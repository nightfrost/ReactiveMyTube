/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.nightfrost.reactivemytubeconsumer.client.api;

import io.nightfrost.reactivemytubeconsumer.client.model.User;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

/**
 * API tests for UserHandlerApi
 */
@Disabled
public class UserHandlerApiTest {

    private final UserHandlerApi api = new UserHandlerApi();

    
    /**
     * 
     *
     * 
     */
    @Test
    public void createUserTest()  {
        // uncomment below to test the function
        //User user = null;
        //api.createUser(user).block();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     */
    @Test
    public void deleteUserTest()  {
        // uncomment below to test the function
        //String id = null;
        //api.deleteUser(id).block();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     */
    @Test
    public void getAllUsersTest()  {
        // uncomment below to test the function
        //api.getAllUsers().block();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     */
    @Test
    public void getUserByIdTest()  {
        // uncomment below to test the function
        //String id = null;
        //api.getUserById(id).block();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     */
    @Test
    public void updateUserTest()  {
        // uncomment below to test the function
        //String id = null;
        //User user = null;
        //api.updateUser(id, user).block();

        // TODO: test validations
    }
    
}
