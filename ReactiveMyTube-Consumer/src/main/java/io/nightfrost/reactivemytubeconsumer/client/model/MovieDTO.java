/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.nightfrost.reactivemytubeconsumer.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * MovieDTO
 */
@JsonPropertyOrder({
  MovieDTO.JSON_PROPERTY_GET_ID,
  MovieDTO.JSON_PROPERTY_FILENAME,
  MovieDTO.JSON_PROPERTY_UPLOAD_DATE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-07-08T22:09:52.285444900+02:00[Europe/Copenhagen]", comments = "Generator version: 7.7.0")
public class MovieDTO {
  public static final String JSON_PROPERTY_GET_ID = "get_id";
  private String getId;

  public static final String JSON_PROPERTY_FILENAME = "filename";
  private String filename;

  public static final String JSON_PROPERTY_UPLOAD_DATE = "uploadDate";
  private OffsetDateTime uploadDate;

  public MovieDTO() {
  }

  public MovieDTO getId(String getId) {
    
    this.getId = getId;
    return this;
  }

  /**
   * Get getId
   * @return getId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GET_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getGetId() {
    return getId;
  }


  @JsonProperty(JSON_PROPERTY_GET_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGetId(String getId) {
    this.getId = getId;
  }

  public MovieDTO filename(String filename) {
    
    this.filename = filename;
    return this;
  }

  /**
   * Get filename
   * @return filename
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FILENAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFilename() {
    return filename;
  }


  @JsonProperty(JSON_PROPERTY_FILENAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFilename(String filename) {
    this.filename = filename;
  }

  public MovieDTO uploadDate(OffsetDateTime uploadDate) {
    
    this.uploadDate = uploadDate;
    return this;
  }

  /**
   * Get uploadDate
   * @return uploadDate
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPLOAD_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getUploadDate() {
    return uploadDate;
  }


  @JsonProperty(JSON_PROPERTY_UPLOAD_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUploadDate(OffsetDateTime uploadDate) {
    this.uploadDate = uploadDate;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MovieDTO movieDTO = (MovieDTO) o;
    return Objects.equals(this.getId, movieDTO.getId) &&
        Objects.equals(this.filename, movieDTO.filename) &&
        Objects.equals(this.uploadDate, movieDTO.uploadDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(getId, filename, uploadDate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MovieDTO {\n");
    sb.append("    getId: ").append(toIndentedString(getId)).append("\n");
    sb.append("    filename: ").append(toIndentedString(filename)).append("\n");
    sb.append("    uploadDate: ").append(toIndentedString(uploadDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

